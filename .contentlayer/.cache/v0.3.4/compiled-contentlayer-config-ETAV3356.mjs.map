{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {\r\n    defineNestedType,\r\n    defineDocumentType,\r\n    makeSource,\r\n} from \"contentlayer/source-files\";\r\n\r\nconst Project = defineDocumentType(() => ({\r\n    name: \"Project\",\r\n    filePathPattern: `projects/*.mdx`,\r\n    contentType: \"mdx\",\r\n    fields: {\r\n        title: {\r\n            type: \"string\",\r\n            description: \"The title of the project\",\r\n            required: true,\r\n        },\r\n        location: {\r\n            type: \"string\",\r\n            description: \"The location of the project\",\r\n            required: true,\r\n        },\r\n        date: {\r\n            type: \"string\",\r\n            description: \"The date of the project\",\r\n            required: true,\r\n        },\r\n        image: {\r\n            type: \"string\",\r\n            description: \"The feature image of the project\",\r\n            required: true,\r\n        },\r\n        client: {\r\n            type: \"string\",\r\n            description: \"The client of the project\",\r\n            required: true,\r\n        },\r\n        role: {\r\n            type: \"string\",\r\n            description: \"The role of the project\",\r\n            required: true,\r\n        },\r\n        year: {\r\n            type: \"string\",\r\n            description: \"The year of the project\",\r\n            required: true,\r\n        },\r\n        color: {\r\n            type: \"string\",\r\n            description: \"The color of the project\",\r\n            required: true,\r\n        },\r\n        bgcolor: {\r\n            type: \"string\",\r\n            description: \"The background color of the project\",\r\n            required: true,\r\n        },\r\n    },\r\n    computedFields: {\r\n        url: {\r\n            type: \"string\",\r\n            resolve: (doc) => `/${doc._raw.flattenedPath}`,\r\n        },\r\n    },\r\n}));\r\n\r\nexport default makeSource({\r\n    contentDirPath: \"content\",\r\n    documentTypes: [Project],\r\n});\r\n"],
  "mappings": ";AAAA;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,OACG;AAEP,IAAM,UAAU,mBAAmB,OAAO;AAAA,EACtC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,UAAU;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACZ,KAAK;AAAA,MACD,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,IAChD;AAAA,EACJ;AACJ,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,OAAO;AAC3B,CAAC;",
  "names": []
}
